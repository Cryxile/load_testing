sonarqube-check:
  image: maven:3.6.3-openjdk-17
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
  services:
    - name: postgres:latest
      alias: postgres
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - |
      echo "Waiting for PostgreSQL to be ready..."
      for i in {1..30}; do
        if pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d $POSTGRES_DB; then
          echo "PostgreSQL is ready!"
          break
        fi
        echo "PostgreSQL is not ready yet. Retrying in 1 second..."
        sleep 1
      done
    - |
      echo "Creating database if not exists..."
      PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -d postgres -c "CREATE DATABASE ${POSTGRES_DB};" || echo "Database already exists"
    - |
      echo "Checking for changelog file..."
      if [ -f "src/main/resources/db/changelog/master.yml" ]; then
        echo "Changelog file found: src/main/resources/db/changelog/master.yml"
      else
        echo "Changelog file not found: src/main/resources/db/changelog/master.yml"
        exit 1
      fi
    - |
      echo "Applying Liquibase migrations..."
      mvn liquibase:update -Dliquibase.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB} -Dliquibase.username=${POSTGRES_USER} -Dliquibase.password=${POSTGRES_PASSWORD}
    - adduser user
    - mvn clean
    - su user -c "mvn verify sonar:sonar -Dsonar.projectKey=java_education_dpetuhov_AZWTHwShXCBj5bhdPBMR -Dsonar.branch.name=$CI_COMMIT_REF_NAME -Dsonar.branch.target=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  only:
    - merge_requests